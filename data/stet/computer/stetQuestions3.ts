// stetQuestions3: Questions 51–60
const stetQuestions3 = [
  {
    textEn: "Which testing approach involves testing individual components or units of code?",
    textHi: "कौन-सा परीक्षण दृष्टिकोण कोड के व्यक्तिगत घटकों/यूनिट का परीक्षण करता है?",
    optionAEn: "Integration Testing",
    optionAHi: "इंटीग्रेशन टेस्टिंग",
    optionBEn: "System Testing",
    optionBHi: "सिस्टम टेस्टिंग",
    optionCEn: "Unit Testing",
    optionCHi: "यूनिट टेस्टिंग",
    optionDEn: "Acceptance Testing",
    optionDHi: "एक्सेप्टेंस टेस्टिंग",
    correct: "C",
    explanationEn: "Unit testing focuses on individual components.",
    explanationHi: "यूनिट टेस्टिंग व्यक्तिगत घटकों पर केंद्रित होती है।"
  }
]

// stetQuestions3Part2: Questions 21–30
const stetQuestions3Part2 = [
  {
    textEn: "Which traversal algorithm is typically implemented using a stack?",
    textHi: "कौन-सा ट्रैवर्सल सामान्यतः स्टैक का उपयोग करके लागू किया जाता है?",
    optionAEn: "DFS",
    optionAHi: "DFS",
    optionBEn: "BFS",
    optionBHi: "BFS",
    optionCEn: "Both DFS and BFS",
    optionCHi: "DFS और BFS दोनों",
    optionDEn: "Neither DFS nor BFS",
    optionDHi: "न DFS न BFS",
    correct: "A",
    explanationEn: "Depth-First Search uses a stack (explicit or call stack).",
    explanationHi: "डेप्थ-फर्स्ट सर्च स्टैक (स्पष्ट या कॉल स्टैक) का उपयोग करता है।"
  },
  {
    textEn: "In a directed graph, an edge from A to B is denoted as:",
    textHi: "निर्देशित ग्राफ में A से B की धार किस प्रकार लिखी जाती है?",
    optionAEn: "(A, B)",
    optionAHi: "(A, B)",
    optionBEn: "[A, B]",
    optionBHi: "[A, B]",
    optionCEn: "<A, B>",
    optionCHi: "<A, B>",
    optionDEn: "{A, B}",
    optionDHi: "{A, B}",
    correct: "A",
    explanationEn: "Ordered pair denotes direction from A to B.",
    explanationHi: "क्रमबद्ध युग्म A से B की दिशा दर्शाता है।"
  },
  {
    textEn: "Separate chaining handles hash collisions by storing collided elements in:",
    textHi: "सेपरेट चेइनिंग हैश टकराव को किसमें तत्वों को संग्रहीत करके संभालती है?",
    optionAEn: "Linked lists",
    optionAHi: "लिंक्ड लिस्ट",
    optionBEn: "Arrays",
    optionBHi: "अरे",
    optionCEn: "Stacks",
    optionCHi: "स्टैक्स",
    optionDEn: "Queues",
    optionDHi: "क्यू",
    correct: "A",
    explanationEn: "Each bucket holds a linked list of key–value pairs.",
    explanationHi: "प्रत्येक बकेट में कुंजी–मान युग्मों की लिंक्ड लिस्ट होती है।"
  },
  {
    textEn: "Which collision resolution technique places collided elements in the next empty slot?",
    textHi: "कौन-सी टकराव समाधान तकनीक टकराए तत्वों को अगले खाली स्लॉट में रखती है?",
    optionAEn: "Linear probing",
    optionAHi: "लिनियर प्रोबिंग",
    optionBEn: "Quadratic probing",
    optionBHi: "क्वाड्रेटिक प्रोबिंग",
    optionCEn: "Separate chaining",
    optionCHi: "सेपरेट चेइनिंग",
    optionDEn: "Double hashing",
    optionDHi: "डबल हैशिंग",
    correct: "A",
    explanationEn: "Linear probing scans sequential slots until a free cell is found.",
    explanationHi: "लिनियर प्रोबिंग क्रमवार स्लॉट ढूँढती है जब तक खाली सेल न मिले।"
  },
  {
    textEn: "In the Tower of Hanoi with n disks, the number of moves required is:",
    textHi: "टॉवर ऑफ़ हनोई में n डिस्क के लिए आवश्यक चालों की संख्या है:",
    optionAEn: "n",
    optionAHi: "n",
    optionBEn: "2n",
    optionBHi: "2n",
    optionCEn: "2^n − 1",
    optionCHi: "2^n − 1",
    optionDEn: "2^n",
    optionDHi: "2^n",
    correct: "C",
    explanationEn: "Classic recurrence yields moves = 2^n − 1.",
    explanationHi: "मानक पुनरावृत्ति से चालें = 2^n − 1 मिलती हैं।"
  },
  {
    textEn: "Removing recursion typically replaces recursive calls with:",
    textHi: "रिकर्शन हटाने पर सामान्यतः पुनरावर्ती कॉल्स को किससे बदला जाता है?",
    optionAEn: "More recursive calls",
    optionAHi: "अधिक पुनरावर्ती कॉल",
    optionBEn: "Loops",
    optionBHi: "लूप",
    optionCEn: "Extra memory allocation",
    optionCHi: "अतिरिक्त मेमोरी आवंटन",
    optionDEn: "Non-recursive function calls",
    optionDHi: "नॉन-रिकर्सिव फ़ंक्शन कॉल",
    correct: "B",
    explanationEn: "An explicit stack/loop simulates recursion.",
    explanationHi: "स्पष्ट स्टैक/लूप रिकर्शन का अनुकरण करते हैं।"
  },
  {
    textEn: "A formal model of protection in an operating system provides:",
    textHi: "ऑपरेटिंग सिस्टम में संरक्षण का औपचारिक मॉडल क्या प्रदान करता है?",
    optionAEn: "A mathematical framework for analyzing resource allocation",
    optionAHi: "संसाधन आबंटन के विश्लेषण हेतु गणितीय ढांचा",
    optionBEn: "Guidelines for UI design",
    optionBHi: "UI डिजाइन के दिशानिर्देश",
    optionCEn: "Methods to optimize memory",
    optionCHi: "मेमोरी ऑप्टिमाइज़ेशन विधियाँ",
    optionDEn: "Techniques to improve CPU utilization",
    optionDHi: "CPU उपयोगिता बढ़ाने की तकनीकें",
    correct: "A",
    explanationEn: "Protection models formalize rights, subjects, and objects.",
    explanationHi: "प्रोटेक्शन मॉडल अधिकार, विषय और वस्तुओं को औपचारिक रूप देते हैं।"
  },
  {
    textEn: "In an operating system, a buffer cache is used to:",
    textHi: "ऑपरेटिंग सिस्टम में बफर कैश का उपयोग किसके लिए होता है?",
    optionAEn: "Store files in memory",
    optionAHi: "फाइलों को मेमोरी में संग्रहीत करना",
    optionBEn: "Store copies of frequently used files in memory",
    optionBHi: "अक्सर उपयोग होने वाली फाइलों की प्रतियाँ मेमोरी में रखना",
    optionCEn: "Store the OS kernel",
    optionCHi: "OS कर्नेल को संग्रहीत करना",
    optionDEn: "Store I/O devices",
    optionDHi: "I/O उपकरणों को संग्रहीत करना",
    correct: "B",
    explanationEn: "Caching hot blocks reduces disk I/O latency.",
    explanationHi: "हॉट ब्लॉक्स कैश करने से डिस्क I/O विलंब घटता है।"
  },
  {
    textEn: "File manipulation operations in an OS include:",
    textHi: "OS में फ़ाइल संचालन में क्या शामिल है?",
    optionAEn: "Allocating memory to files",
    optionAHi: "फाइलों को मेमोरी आवंटित करना",
    optionBEn: "Assigning file names to processes",
    optionBHi: "प्रोसेस को फ़ाइल नाम देना",
    optionCEn: "Loading files into CPU registers",
    optionCHi: "फ़ाइलों को CPU रजिस्टर में लोड करना",
    optionDEn: "Reading, writing, and modifying file content",
    optionDHi: "फ़ाइल सामग्री को पढ़ना, लिखना और संशोधित करना",
    correct: "D",
    explanationEn: "Core file operations are read/write/update.",
    explanationHi: "मुख्य फ़ाइल क्रियाएँ पढ़ना/लिखना/संशोधित करना हैं।"
  },
  {
    textEn: "The I/O subsystem of an OS is responsible for:",
    textHi: "OS का I/O उपप्रणाली किसके लिए उत्तरदायी है?",
    optionAEn: "Allocating memory for processes",
    optionAHi: "प्रोसेस हेतु मेमोरी आवंटन",
    optionBEn: "Managing the file system",
    optionBHi: "फाइल सिस्टम प्रबंधन",
    optionCEn: "Managing I/O between processes and devices",
    optionCHi: "प्रोसेस और उपकरणों के बीच I/O प्रबंधन",
    optionDEn: "Allocating CPU time to processes",
    optionDHi: "प्रोसेस को CPU समय आवंटित करना",
    correct: "C",
    explanationEn: "It coordinates device drivers, buffering, and scheduling of I/O.",
    explanationHi: "यह डिवाइस ड्राइवर, बफरिंग और I/O अनुसूची का समन्वय करता है।"
  }
];
