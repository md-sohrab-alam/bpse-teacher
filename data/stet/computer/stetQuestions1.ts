export const stetQuestions1 = [
  { 
    textEn: "What is the simplified expression for the Boolean function F(A, B, C, D) = Σ(0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14) using the K-map method?",
    textHi: "K-map विधि का उपयोग करते हुए F(A, B, C, D) = Σ(0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14) का सरलीकृत व्यंजक क्या है?",
    optionAEn: "A'B'C'D' + A'B'C'D + A'BC'D + AB'C'D + ABCD",
    optionAHi: "A'B'C'D' + A'B'C'D + A'BC'D + AB'C'D + ABCD",
    optionBEn: "A'B'C'D' + A'BC'D + AB'C'D + ABC'D + ABCD",
    optionBHi: "A'B'C'D' + A'BC'D + AB'C'D + ABC'D + ABCD",
    optionCEn: "A'B'C'D' + A'BC'D + ABC'D + ABCD",
    optionCHi: "A'B'C'D' + A'BC'D + ABC'D + ABCD",
    optionDEn: "A'B'C'D' + A'BC'D' + A'BCD + ABCD",
    optionDHi: "A'B'C'D' + A'BC'D' + A'BCD + ABCD",
    correct: "A",
    explanationEn: "By grouping the given minterms on a 4-variable K-map, prime implicants reduce to A'B'C'D' + A'B'C'D + A'BC'D + AB'C'D + ABCD.",
    explanationHi: "चार-चर K-map में दिए गए मिंटर्म को समूहित करने पर प्राइम इम्प्लिकेंट घटकर A'B'C'D' + A'B'C'D + A'BC'D + AB'C'D + ABCD मिलते हैं।"
  },
  {
    textEn: "In a PLA, what components are used to implement the combinational logic functions?",
    textHi: "PLA में संयोजनात्मक लॉजिक फलनों को लागू करने के लिए किन अवयवों का उपयोग होता है?",
    optionAEn: "AND gates and OR gates",
    optionAHi: "AND गेट और OR गेट",
    optionBEn: "NAND gates and XOR gates",
    optionBHi: "NAND गेट और XOR गेट",
    optionCEn: "NOR gates and XNOR gates",
    optionCHi: "NOR गेट और XNOR गेट",
    optionDEn: "NOT gates and multiplexers",
    optionDHi: "NOT गेट और मल्टीप्लेक्सर",
    correct: "A",
    explanationEn: "A PLA uses a programmable AND array followed by a programmable OR array.",
    explanationHi: "PLA में प्रोग्रामेबल AND एरे के बाद प्रोग्रामेबल OR एरे होता है।"
  },
  {
    textEn: "Which type of register is primarily used to temporarily hold data during arithmetic and logical operations in a microprocessor?",
    textHi: "माइक्रोप्रोसेसर में अंकगणितीय व तार्किक क्रियाओं के दौरान अस्थायी रूप से डेटा रखने के लिए मुख्यतः किस रजिस्टर का उपयोग होता है?",
    optionAEn: "Shift register",
    optionAHi: "शिफ्ट रजिस्टर",
    optionBEn: "Parallel register",
    optionBHi: "पैरलल रजिस्टर",
    optionCEn: "Accumulator register",
    optionCHi: "एक्यूम्युलेटर रजिस्टर",
    optionDEn: "Counter register",
    optionDHi: "काउंटर रजिस्टर",
    correct: "C",
    explanationEn: "The accumulator holds intermediate ALU results temporarily.",
    explanationHi: "एक्यूम्युलेटर ALU के मध्यवर्ती परिणामों को अस्थायी रूप से रखता है।"
  },
  {
    textEn: "Which logic family uses both depletion and enhancement mode MOSFETs for its operation?",
    textHi: "कौन-सा लॉजिक परिवार अपने संचालन के लिए डीप्लीशन और एन्हांसमेंट दोनों मोड MOSFET का उपयोग करता है?",
    optionAEn: "TTL",
    optionAHi: "TTL",
    optionBEn: "ECL",
    optionBHi: "ECL",
    optionCEn: "PMOS",
    optionCHi: "PMOS",
    optionDEn: "CMOS",
    optionDHi: "CMOS",
    correct: "D",
    explanationEn: "CMOS technology uses complementary enhancement/depletion MOSFET structures.",
    explanationHi: "CMOS तकनीक पूरक एन्हांसमेंट/डीप्लीशन MOSFET संरचनाओं का प्रयोग करती है।"
  },
  {
    textEn: "What is the primary difference between ROM and RAM?",
    textHi: "ROM और RAM के बीच मुख्य अंतर क्या है?",
    optionAEn: "ROM is faster than RAM",
    optionAHi: "ROM, RAM से तेज़ है",
    optionBEn: "ROM is volatile, while RAM is non-volatile",
    optionBHi: "ROM वोलाटाइल है, जबकि RAM नॉन-वोलाटाइल",
    optionCEn: "ROM is used for data storage, while RAM is used for program execution",
    optionCHi: "ROM डेटा भंडारण के लिए और RAM प्रोग्राम निष्पादन के लिए",
    optionDEn: "ROM stores permanent data; RAM stores temporary read/write data",
    optionDHi: "ROM स्थायी डेटा संग्रहीत करती है; RAM अस्थायी पढ़ने/लिखने का डेटा रखती है",
    correct: "D",
    explanationEn: "ROM is non-volatile and stores permanent data; RAM is volatile and used for temporary read/write.",
    explanationHi: "ROM नॉन-वोलाटाइल है व स्थायी डेटा रखती है; RAM वोलाटाइल है और अस्थायी पढ़ने/लिखने के लिए।"
  },
  {
    textEn: "Given a Boolean function F(A, B, C) = Σ(0, 1, 2, 3, 5), what is the expression in SOP form?",
    textHi: "F(A, B, C) = Σ(0, 1, 2, 3, 5) का SOP रूप क्या होगा?",
    optionAEn: "A'B' + AB' + AB + AC",
    optionAHi: "A'B' + AB' + AB + AC",
    optionBEn: "A + B + C",
    optionBHi: "A + B + C",
    optionCEn: "AB' + C'",
    optionCHi: "AB' + C'",
    optionDEn: "A'B'C'",
    optionDHi: "A'B'C'",
    correct: "A",
    explanationEn: "Minterms reduce to A'B' + AB' + AB + AC in SOP.",
    explanationHi: "मिनटर्म घटाने पर SOP में A'B' + AB' + AB + AC मिलता है।"
  },
  {
    textEn: "If the sum of two positive binary numbers is 11010 and there is a carry-out from the MSB, what should be done to obtain the correct result?",
    textHi: "दो धनात्मक बाइनरी संख्याओं का योग 11010 है और MSB से कैरी निकला है, सही परिणाम हेतु क्या करें?",
    optionAEn: "Discard the carry",
    optionAHi: "कैरी को त्यागें",
    optionBEn: "Add the carry to the least significant bit (LSB)",
    optionBHi: "कैरी को LSB में जोड़ें",
    optionCEn: "Add the carry to the most significant bit (MSB)",
    optionCHi: "कैरी को MSB में जोड़ें",
    optionDEn: "Subtract the carry from the MSB",
    optionDHi: "MSB से कैरी घटाएँ",
    correct: "B",
    explanationEn: "Binary end-around carry is added back to LSB.",
    explanationHi: "एंड-अराउंड कैरी को LSB में पुनः जोड़ते हैं।"
  },
  {
    textEn: "In binary multiplication using the simple method, what is the first step after aligning the digits and preparing for multiplication?",
    textHi: "सरल विधि से बाइनरी गुणा में अंकों को संरेखित करने के बाद पहला चरण क्या है?",
    optionAEn: "Multiply the least significant bit (LSB) by the multiplier",
    optionAHi: "LSB को गुणक से गुणा करें",
    optionBEn: "Multiply the most significant bit (MSB) by the multiplier",
    optionBHi: "MSB को गुणक से गुणा करें",
    optionCEn: "Multiply the LSB by the multiplicand",
    optionCHi: "LSB को गुणनखंड से गुणा करें",
    optionDEn: "Multiply the MSB by the multiplicand",
    optionDHi: "MSB को गुणनखंड से गुणा करें",
    correct: "A",
    explanationEn: "Start partial products from the multiplier’s LSB.",
    explanationHi: "आंशिक गुणनफल गुणक के LSB से शुरू होते हैं।"
  },
  {
    textEn: "What is the relationship between the distance between parity bits and their error detection and correction capability in Hamming Code?",
    textHi: "हैमिंग कोड में पैरिटी बिट्स के बीच की दूरी और त्रुटि पहचान/सुधार क्षमता का संबंध क्या है?",
    optionAEn: "Closer parity bits provide higher error correction capability",
    optionAHi: "पैरिटी बिट्स पास होने पर सुधार क्षमता अधिक होती है",
    optionBEn: "Closer parity bits provide lower error correction capability",
    optionBHi: "पैरिटी बिट्स पास होने पर सुधार क्षमता कम होती है",
    optionCEn: "Distance has no impact on correction capability",
    optionCHi: "दूरी का सुधार क्षमता पर प्रभाव नहीं",
    optionDEn: "Parity bit positions are irrelevant",
    optionDHi: "पैरिटी बिट्स की स्थिति अप्रासंगिक है",
    correct: "B",
    explanationEn: "Greater separation improves error detection/correction; closer bits reduce capability.",
    explanationHi: "अधिक दूरी से पहचान/सुधार क्षमता बेहतर; कम दूरी से क्षमता घटती है।"
  },
  {
    textEn: "To convert a Gray Code to its binary equivalent, which technique is commonly used?",
    textHi: "ग्रे कोड को समतुल्य बाइनरी में बदलने के लिए कौन-सी तकनीक प्रयुक्त होती है?",
    optionAEn: "Subtraction method",
    optionAHi: "घटाव विधि",
    optionBEn: "Addition method",
    optionBHi: "जोड़ विधि",
    optionCEn: "Exclusive OR (XOR) operation",
    optionCHi: "एक्सक्लूसिव-OR (XOR) ऑपरेशन",
    optionDEn: "Division method",
    optionDHi: "भाग विधि",
    correct: "C",
    explanationEn: "Successive XOR between Gray bits and previous Binary bit yields Binary code.",
    explanationHi: "ग्रे बिट्स को पिछले बाइनरी बिट से क्रमिक XOR करने पर बाइनरी प्राप्त होता है।"
  }
];
